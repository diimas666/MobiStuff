'use client';
// ImportPage —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–±–∞—Ä–æ–º: !!!!!!!!!!!!!!!!!!!!!!!!!!! –ø—Ä–æ–≤–µ—Ä—å
import { useState } from 'react';
import { toast } from 'react-toastify';

export default function ImportPage() {
  const [file, setFile] = useState<File | null>(null);
  const [progress, setProgress] = useState(0);
  const [uploading, setUploading] = useState(false);

  const handleUpload = async () => {
    if (!file) return;

    const formData = new FormData();
    formData.append('file', file);

    const xhr = new XMLHttpRequest();

    xhr.upload.onprogress = (event) => {
      if (event.lengthComputable) {
        const percent = Math.round((event.loaded / event.total) * 100);
        setProgress(percent);
      }
    };

    xhr.onload = () => {
      setUploading(false);
      if (xhr.status === 200) {
        toast.success('‚úÖ –¢–æ–≤–∞—Ä–∏ —ñ–º–ø–æ—Ä—Ç–æ–≤–∞–Ω—ñ!');
        setProgress(0);
        setFile(null);
      } else {
        toast.error(`‚ùå –ü–æ–º–∏–ª–∫–∞: ${xhr.responseText}`);
      }
    };

    xhr.onerror = () => {
      setUploading(false);
      toast.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è');
    };

    xhr.open('POST', '/api/admin/import');
    setUploading(true);
    xhr.send(formData);
  };

  return (
    <div className="max-w-xl mx-auto p-6 space-y-4">
      {file && (
        <p className="text-sm text-gray-700">
          üìÑ –û–±—Ä–∞–Ω–æ —Ñ–∞–π–ª: <span className="font-medium">{file.name}</span>
        </p>
      )}
      <h2 className="text-xl font-bold">–Ü–º–ø–æ—Ä—Ç —Ç–æ–≤–∞—Ä—ñ–≤</h2>

      <input
        type="file"
        accept=".csv, .json"
        onChange={(e) => setFile(e.target.files?.[0] || null)}
      />

      <button
        onClick={handleUpload}
        disabled={!file || uploading}
        className="bg-black text-white px-4 py-2 rounded disabled:opacity-50"
      >
        {uploading ? '–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è...' : '–ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏'}
      </button>
      {progress === 100 && !uploading && (
        <p className="text-green-600 text-sm mt-2">
          ‚úÖ –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ!
        </p>
      )}

      {uploading && (
        <div className="h-4 bg-gray-200 rounded overflow-hidden">
          <div
            className="h-full bg-green-500 transition-all duration-300"
            style={{ width: `${progress}%` }}
          />
        </div>
      )}
    </div>
  );
}
