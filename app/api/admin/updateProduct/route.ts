// ‚úÖ /app/api/admin/updateProduct/route.ts
import { NextResponse } from 'next/server';
import dbConnect from '@/lib/dbConnect';
import Product from '../../models/Product';

export async function PATCH(req: Request) {
  await dbConnect();
  const body = await req.json();

  // console.log('üì¶ PATCH BODY:', body);

  const { id, ...updateFields } = body;

  if (!id) {
    return NextResponse.json({ error: 'ID –≤—ñ–¥—Å—É—Ç–Ω—ñ–π' }, { status: 400 });
  }

  try {
    const updated = await Product.findByIdAndUpdate(id, updateFields, {
      new: true,
    });

    if (!updated) {
      return NextResponse.json({ error: '–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ' }, { status: 404 });
    }

    console.log('‚úÖ –û–Ω–æ–≤–ª–µ–Ω–∏–π —Ç–æ–≤–∞—Ä:', updated); // —ñ —Ç—É—Ç –ª–æ–≥

    return NextResponse.json({ message: '–û–Ω–æ–≤–ª–µ–Ω–æ', product: updated });
  } catch (e) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è:', e);
    return NextResponse.json(
      { error: '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ —Ç–æ–≤–∞—Ä—É' },
      { status: 500 }
    );
  }
}
